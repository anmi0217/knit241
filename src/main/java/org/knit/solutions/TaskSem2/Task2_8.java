package org.knit.solutions.TaskSem2;

import org.knit.TaskDescription;
import org.knit.solutions.ClassesSem2.lab2.task4.TrafficLight;
import org.knit.solutions.ClassesSem2.lab4.task1.Solution;

/**
 * –ó–∞–¥–∞—á–∞ 2.8: –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫: —Å–≤–µ—Ç–æ—Ñ–æ—Ä –∏ –º–∞—à–∏–Ω—ã üö¶üöó
 * <p>
 * –û–ø–∏—Å–∞–Ω–∏–µ:
 * - –ö—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç ‚Äì –º–∞—à–∏–Ω—ã —Å—Ç–æ—è—Ç (wait()).
 * - –ó–µ–ª–µ–Ω—ã–π —Å–≤–µ—Ç ‚Äì –º–∞—à–∏–Ω—ã –µ–¥—É—Ç (notifyAll()).
 * - –°–≤–µ—Ç–æ—Ñ–æ—Ä –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥.
 * <p>
 * –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
 * - –ü–æ—Ç–æ–∫ "–°–≤–µ—Ç–æ—Ñ–æ—Ä" –∏–∑–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç notifyAll().
 * - –ü–æ—Ç–æ–∫–∏ "–ú–∞—à–∏–Ω–∞" –∂–¥—É—Ç wait(), –µ—Å–ª–∏ –∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç.
 */

@TaskDescription(taskNumber = 8,
        taskDescription = "–ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫: —Å–≤–µ—Ç–æ—Ñ–æ—Ä –∏ –º–∞—à–∏–Ω—ã",
        href = "org/knit/solutions/taskExampleClasses/README.md")

public class Task2_8 implements Solution {
    public void execute() {
        TrafficLight trafficLight = new TrafficLight();

        // –ü–æ—Ç–æ–∫ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞
        Thread light = new Thread(() -> {
            while (true) {
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                }
                trafficLight.switchLight();
            }
        });

        // –ü–æ—Ç–æ–∫–∏ –º–∞—à–∏–Ω
        for (int i = 1; i <= 5; i++) {
            String carName = "–ú–∞—à–∏–Ω–∞ " + i;
            new Thread(() -> {
                while (true) {
                    trafficLight.carArrive(carName);
                    try {
                        Thread.sleep(2000); // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è–º–∏ –º–∞—à–∏–Ω –Ω–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–µ
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }).start();
        }

        light.start();
    }
}
