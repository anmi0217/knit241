/*
2.7 –ó–∞–¥–∞—á–∞ ¬´–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å-–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º¬ª üè≠üì¶

üìå –û–ø–∏—Å–∞–Ω–∏–µ:

–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã (–º–∞–∫—Å–∏–º—É–º 5).
–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –∑–∞–±–∏—Ä–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã.
–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –∂–¥–µ—Ç (wait()).
–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–∫—Å–∏–º—É–º, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –∂–¥–µ—Ç (wait()).
üîπ –ß—Ç–æ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å?
‚úî wait() ‚Äì –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç –∏–ª–∏ —Å–∫–ª–∞–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω.
‚úî notify() ‚Äì –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–ª–∞–¥–∞.
 */

package org.knit.solutions.org2.lab7;

import org.knit.solutions.annotations.Discription;

@Discription(value = 7, name = "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å-–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º")
public class Task7 {
    public static void main(String[] args) {
        Warehouse warehouse = new Warehouse(); // –°–æ–∑–¥–∞–µ–º —Å–∫–ª–∞–¥

        // –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è
        Thread producerThread = new Thread(new Producer(warehouse));
        Thread consumerThread = new Thread(new Consumer(warehouse));

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏
        producerThread.start();
        consumerThread.start();

        // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤
        try {
            producerThread.join();
            consumerThread.join();
        } catch (InterruptedException e) {
            System.out.println("–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –ø—Ä–µ—Ä–≤–∞–Ω.");
        }

        System.out.println("–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
    }
}
